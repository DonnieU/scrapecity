{"version":3,"file":"static/webpack/static/development/pages/index.js.bfefa4d58b187a9c3d93.hot-update.js","sources":["webpack:///./components/Page.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './ScrapeContext';\n\n// Custom hook wrapped in an anon fn\n// as useEffect expects a fn to be returned\nfunction useScrapes() {\n  const [ scrapes, setScrapes ] = useState({\n    twitter: [],\n    instagram: [],\n  });\n\n  useEffect(function() {\n    (async () => {\n      console.log('Mounting or Updating');\n      const res = await fetch('http://localhost:2093/data');\n      const data = await res.json();\n      // console.log(data);\n      setScrapes(data);\n    })();\n  }, []);\n  return scrapes;\n}\n\nexport default function Page({children}) {\n  const scrapes = useScrapes();\n  return (\n    <ScrapeProvider\n        value={{\n         scrapes,\n        }}\n      >\n      <div className=\"page\">{children}</div>\n    </ScrapeProvider>\n  );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}