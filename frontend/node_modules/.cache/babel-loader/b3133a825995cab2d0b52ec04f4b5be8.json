{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/biff/code/scrapecity/frontend/components/Page.js\";\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './ScrapeContext'; // Custom hook wrapped in an anon fn\n// as useEffect expects a fn to be returned\n\nfunction useScrapes() {\n  var _useState = useState({\n    twitter: [],\n    instagram: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrapes = _useState2[0],\n      setScrapes = _useState2[1];\n\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Mounting or Updating');\n              _context.next = 3;\n              return fetch('http://localhost:2093/data');\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context.sent;\n              // console.log(data);\n              setScrapes(data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  return scrapes;\n}\n\nexport default function Page(_ref2) {\n  var children = _ref2.children;\n  var scrapes = useScrapes();\n  return React.createElement(ScrapeProvider, {\n    value: {\n      scrapes: scrapes\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, children));\n}","map":{"version":3,"sources":["/home/biff/code/scrapecity/frontend/components/Page.js"],"names":["useEffect","useState","ScrapeProvider","useScrapes","twitter","instagram","scrapes","setScrapes","console","log","fetch","res","json","data","Page","children"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,iBAA/B,C,CAEA;AACA;;AACA,SAASC,UAAT,GAAsB;AAAA,kBACYF,QAAQ,CAAC;AACvCG,IAAAA,OAAO,EAAE,EAD8B;AAEvCC,IAAAA,SAAS,EAAE;AAF4B,GAAD,CADpB;AAAA;AAAA,MACZC,OADY;AAAA,MACHC,UADG;;AAMpBP,EAAAA,SAAS,CAAC,YAAW;AACnB;AAAA;AAAA,6BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCQ,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AADD;AAAA,qBAEmBC,KAAK,CAAC,4BAAD,CAFxB;;AAAA;AAEOC,cAAAA,GAFP;AAAA;AAAA,qBAGoBA,GAAG,CAACC,IAAJ,EAHpB;;AAAA;AAGOC,cAAAA,IAHP;AAIC;AACAN,cAAAA,UAAU,CAACM,IAAD,CAAV;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAOD,GARQ,EAQN,EARM,CAAT;AASA,SAAOP,OAAP;AACD;;AAED,eAAe,SAASQ,IAAT,QAA0B;AAAA,MAAXC,QAAW,SAAXA,QAAW;AACvC,MAAMT,OAAO,GAAGH,UAAU,EAA1B;AACA,SACE,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE;AACNG,MAAAA,OAAO,EAAPA;AADM,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBS,QAAvB,CALF,CADF;AASD","sourcesContent":["import { useEffect, useState } from 'react';\nimport { ScrapeProvider } from './ScrapeContext';\n\n// Custom hook wrapped in an anon fn\n// as useEffect expects a fn to be returned\nfunction useScrapes() {\n  const [ scrapes, setScrapes ] = useState({\n    twitter: [],\n    instagram: [],\n  });\n\n  useEffect(function() {\n    (async () => {\n      console.log('Mounting or Updating');\n      const res = await fetch('http://localhost:2093/data');\n      const data = await res.json();\n      // console.log(data);\n      setScrapes(data);\n    })();\n  }, []);\n  return scrapes;\n}\n\nexport default function Page({children}) {\n  const scrapes = useScrapes();\n  return (\n    <ScrapeProvider\n        value={{\n         scrapes,\n        }}\n      >\n      <div className=\"page\">{children}</div>\n    </ScrapeProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}